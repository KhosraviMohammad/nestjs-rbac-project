version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    container_name: nestjs-rbac-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_net

  mongodb:
    image: mongo:7.0
    container_name: nestjs-rbac-mongodb
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_net

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app_net

  frontend:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "4173:4173"
    depends_on:
      - backend
    command: ["npm", "run", "preview", "--", "--host", "0.0.0.0", "--port", "4173"]

volumes:
  postgres_data:
  mongo_data:

networks:
  app_net:


